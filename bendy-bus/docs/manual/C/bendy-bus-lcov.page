<?xml version="1.0" encoding="utf-8"?>
<page xmlns="http://projectmallard.org/1.0/" type="topic" id="bendy-bus-lcov">
<info>
	<link type="guide" xref="simulator"/>
	<link type="prev" xref="bendy-bus"/>
	<link type="next" xref="bendy-bus-lint"/>
	<credit type="author">
		<name>Philip Withnall</name>
		<email>philip@tecnocode.co.uk</email>
	</credit>
	<license><p>Creative Commons Share Alike 3.0</p></license>
</info>
<title><cmd>lcov</cmd> Wrapper</title>

<p>The <cmd>lcov</cmd> wrapper takes much the same input as the simulator itself, but wraps the client program in <cmd>lcov</cmd> in order to measure the
code coverage of the client program achieved by the simulation across all the test runs in a set of test runs.</p>

<section id="usage">
<title>Command Line Usage</title>

<p>The command line usage of the <cmd>lcov</cmd> wrapper is: <cmd>bendy-bus-lcov <var>[simulation code file]</var> <var>[introspection XML file]</var>
<var>[lcov directory]</var> <var>[results directory/test name]</var> <var>[baseline info file]</var> -- <var>[options]</var> --
<var>[executable file]</var> <var>[arguments]</var></cmd>.</p>

<p>The simulation code file and introspection XML file must be files containing a simulation description (<link xref="language"/>) and the corresponding
D-Bus introspection XML, respectively. The <cmd>lcov</cmd> directory is the root directory of the client program's source code, which should be where the
<sys>.da</sys> files generated by the compiler for code coverage use are contained. (The <cmd>lcov</cmd> directory is passed to <cmd>lcov</cmd> as
a <cmd>--directory</cmd> option.) The results directory (which is optional) and test name (which is required) give the filename of the output file to
produce as a result of the test runs. The baseline <sys>.info</sys> file is the filename of an <cmd>lcov</cmd> <sys>.info</sys> file generated previously
as a base line of the code coverage achieved in the client program with no intervention. The options (after a mandatory <cmd>--</cmd> separator) are
passed straight through to the simulator (see <link xref="bendy-bus#options"/>). The executable file and associated arguments give the client program to
run under the simulation. Note that there must be a <cmd>--</cmd> separator before the client program is specified.</p>

</section>

</page>
